//minimum cost of ropes
 long long minCost(long long arr[], long long n) {
        priority_queue<long long,vector<long long>,greater<long long>>p;
        for(int i=0;i<n;i++){
            p.push(arr[i]);
        }
        long long answer=0;
        while(!p.empty()){
            long long temp1=p.top();
            p.pop();
            if(p.empty()){
                break;
            }
            long long temp2=p.top();
            p.pop();
            answer+=temp1+temp2;
            p.push(temp1+temp2);
        }
        return answer;
    }
