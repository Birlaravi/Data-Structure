void heapify(int arr[], int n, int i) {
    // Find largest among root, left child and right child
    int ele=arr[i];
    int largest=i;
    int leftChild=2*i+1;
    int rightChild=leftChild+1;
    while(i<n/2){
        leftChild=2*i+1;
        rightChild=leftChild+1;
        if(rightChild<n && arr[rightChild]>arr[leftChild]){
            largest=rightChild;
        }else{
            largest=leftChild;
        }
        if(arr[largest]<ele){
            break;
        }
        arr[i]=arr[largest];
        i=largest;
    }
    arr[i]=ele;
   
}

// Main function to do heap sort
void buildHeap(int arr[], int n) {
    // Build max heap
    for(int i=n/2-1;i>=0;i--){
        heapify(arr,n,i);
    }
    //sorting == heap sort
    for(int i=n-1;i>=0;i--){
        swap(&arr[i],&arr[0]);
        heapify(arr,i,0);
    }
}
